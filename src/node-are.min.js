/* node-are.js v0.0.1 (https://github.com/imaginate/are)
 * Copyright (c) 2015 Adam A Smith <adam@imaginate.life>
 * The Apache License (github.com/imaginate/are/blob/master/LICENSE.md) */
(function(l,f){function k(a,b){return"object"===a||!b&&"function"===a}function h(a,b){return(a=a&&b&&a.nodeType?!1:a)&&!b&&a.Object!==Object?!1:!!a}function p(a){a.is=m.is;a.Is=m.Is;a.are=m.are;a.Are=m.Are;return!0}var m=f(),t=k(typeof exports)&&h(exports,!0),a=k(typeof module)&&h(module,!0),b=k(typeof global,!0)&&h(global),q=k(typeof window)&&h(window),r=k(typeof self)&&h(self),v=k(typeof l)&&h(l);l=t&&a&&b?global:q&&window!==(l&&l.window)?window:r?self:v?l:Function("return this")();q&&p(window);
r&&p(self);p(l);t&&a&&(module.exports===exports?module.exports=m:p(exports));"function"===typeof define&&define.amd&&"object"===typeof define.amd&&define(function(){return m})})(this,function(l){function f(g,e){var b,d;e=1<e.length?v.call(e,0):e[0];if(!a.arr(e))throw Error("An are."+g+"(vals) call did not receive multiple vals to evaluate");b=a[g];for(d=e.length;d--;)if(!b(e[d]))return!1;return!0}function k(a,b,c){for(var d in b)b.hasOwnProperty(d)&&h(a,d,b[d],c)}function h(g,b,c,d){c=h.hasOwnProperty(g)?
h[g](c):c;d=!1!==d;w["_"+b]=function(g,b){b=a.bool(b)?b:d;return a.nil(g)?b:c(g)}}function p(a,b,c){var d;for(d=a.length;d--;)if(w[a[d]](b,c))return!0;return!1}function m(a){var b,c,d;b=a.toLowerCase().replace(n.all,"").split("|");for(d=b.length;d--;){c="_"+b[d];c=x.hasOwnProperty(c)?"_"+x[c]:c;if(!w.hasOwnProperty(c))return c;b[d]=c}n["="](a)&&b.push("_undefined");return b}function t(a){return(n["?"](a)?n["!"](a):!n["!"](a))?l:!n["!"](a)&&n["?"](a)}function a(g,b){var c,d;if(!a._str(g))throw new TypeError("An is(typeStr, val) call received a non-string typeStr param");
if(n["*"](g))return"*"!==g&&"any"!==g&&q&&console.log("Confusing is() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;c=m(g);if(a.str(c))throw Error("Invalid is(typeStr, val) Call: invalid type in the typeStr param; invalid type => "+c);d=t(g);return p(c,b,d)}function b(g,b){var c,d;if(!a._str(g))throw new TypeError("An are(typeStr, vals) call received a non-string typeStr param");b=2<arguments.length?v.call(arguments,1):b;if(!a.arr(b))throw new TypeError("An are(typeStr, vals) call did not receive multiple vals to evaluate");
if(n["*"](g))return"*"!==g&&"any"!==g&&q&&console.log("Confusing are() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;c=m(g);if(a.str(c))throw Error("Invalid are(typeStr, val) Call: invalid type in the typeStr param; invalid type => "+c);d=t(g);a:{var f=b,h;for(h=f.length;h--;)if(!p(c,f[h],d)){c=!1;break a}c=!0}return c}var q="object"===typeof console&&"function"===typeof console.log,r=Object.prototype.toString,v=Array.prototype.slice,
u=function(a,b,c){q&&console.log("Your JS engine does not support "+a+"."+b+"(). Use "+a+"."+c+"() instead.")};a["null"]=function(a){return null===a};a.nil=a["null"];a.undefined=function(a){return"undefined"===typeof a};a["boolean"]=function(a){return"boolean"===typeof a};a.bool=a["boolean"];a.string=function(a,b){return(!1!==b||!!a)&&"string"===typeof a};a.str=a.string;a._string=function(b){return a.string(b,!1)};a._str=a._string;a.number=function(a,b){return(!1!==b||!!a)&&"number"===typeof a};a.num=
a.number;a._number=function(b){return a.number(b,!1)};a._num=a._number;a.object=function(a,b){return(a=!!a&&typeof a)&&("object"===a||!0===b&&"function"===a)};a.obj=a.object;a._object=function(b){return a.obj(b,!0)};a._obj=a._object;a.func=function(a){return!!a&&"function"===typeof a};a.fn=a.func;try{a["function"]=a.func}catch(z){u("is","function","func")}a.array=function(b,e){return(b=a.obj(b)&&r.call(b))&&("[object Array]"===b||!0===e&&"[object Arguments]"===b)};a.arr=a.array;a._array=function(b){return a.arr(b,
!0)};a._arr=a._array;a.regexp=function(b){return a.obj(b)&&"[object RegExp]"===r.call(b)};a.regex=a.regexp;a.args=function(b){return a.obj(b)&&("[object Arguments]"===r.call(b)||"callee"in b)};try{a.arguments=a.args}catch(A){u("is","arguments","args")}a.document=function(b){return a.obj(b)&&9===b.nodeType};a.doc=a.document;a.element=function(b){return a.obj(b)&&1===b.nodeType};a.elem=a.element;a.empty=function(b){var e;if(!a._obj(b))return!b;if(a.arr(b)||a.func(b))return!b.length;for(e in b)if(b.hasOwnProperty(e))return!1;
return!0};b["null"]=function(){return f("null",arguments)};b.nil=b["null"];b.undefined=function(){return f("undefined",arguments)};b["boolean"]=function(){return f("boolean",arguments)};b.bool=b["boolean"];b.string=function(){return f("string",arguments)};b.str=b.string;b._string=function(){return f("_string",arguments)};b._str=b._string;b.number=function(){return f("number",arguments)};b.num=b.number;b._number=function(){return f("_number",arguments)};b._num=b._number;b.object=function(){return f("object",
arguments)};b.obj=b.object;b._object=function(){return f("_object",arguments)};b._obj=b._object;b.func=function(){return f("func",arguments)};b.fn=b.func;try{b["function"]=b.func}catch(B){u("are","function","func")}b.array=function(){return f("array",arguments)};b.arr=b.array;b._array=function(){return f("_array",arguments)};b._arr=b._array;b.regexp=function(){return f("regexp",arguments)};b.regex=b.regexp;b.args=function(){return f("args",arguments)};try{b.arguments=b.args}catch(C){u("are","arguments",
"args")}b.document=function(){return f("document",arguments)};b.doc=b.document;b.element=function(){return f("element",arguments)};b.elem=b.element;b.empty=function(){return f("empty",arguments)};var y=require("fs");a.buffer=function(a){return Buffer.isBuffer(a)};a.buff=a.buffer;a.directory=function(b){var e;if(!a._string(b))return!1;try{e=y.statSync(b).isDirectory()}catch(c){e=!1}finally{return e}};a.dir=a.directory;a.directories=function(b,e){var c,d;if(!a.array(b))return!1;a._string(e)&&e.replace(/([^\/]$)/,
"$1/");c=a.directory;for(d=b.length;d--;)if(!c(b[d]))return!1;return!0};a.directorys=a.directories;a.dirs=a.directories;a.file=function(b){var e;if(!a._string(b))return!1;try{e=y.statSync(b).isFile()}catch(c){e=!1}finally{return e}};a.files=function(b,e){var c,d;if(!a.array(b))return!1;a._string(e)&&e.replace(/([^\/]$)/,"$1/");c=a.file;for(d=b.length;d--;)if(!c(b[d]))return!1;return!0};b.buffer=function(){return f("buffer",arguments)};b.buff=b.buffer;b.directory=function(){return f("directory",arguments)};
b.dir=b.directory;b.file=function(){return f("file",arguments)};h.arrays=function(b){return function(e){var c;if(!a.arr(e))return!1;for(c=e.length;c--;)if(!b(e[c]))return!1;return!0}};h.maps=function(b){return function(e){var c;if(!a.obj(e))return!1;for(c in e)if(e.hasOwnProperty(c)&&!b(e[c]))return!1;return!0}};var w={};k("primitives",{undefined:a.undefined,"boolean":a.bool,string:a.str,number:a.num},!1);h("primitives","null",a.nil);k("js_objects",{object:a.obj,regexp:a.regex,array:a.arr});h("js_objects",
"function",a.func,!1);k("dom_objects",{element:a.elem,document:a.doc});h("others","empty",a.empty);k("arrays",{nulls:a.nil,booleans:a.bool,strings:a.str,numbers:a.num,objects:a.obj,functions:a.func,regexps:a.regex,arrays:a.arr,elements:a.elem,documents:a.doc});k("maps",{nullmap:a.nil,booleanmap:a.bool,stringmap:a.str,numbermap:a.num,objectmap:a.obj,functionmap:a.func,regexpmap:a.regex,arraymap:a.arr,elementmap:a.elem,documentmap:a.doc});var x={_nil:"null",_bool:"boolean",_str:"string",_num:"number",
_obj:"object",_func:"function",_fn:"function",_regex:"regexp",_arr:"array",_elem:"element",_doc:"document",_nils:"nulls",_strs:"strings",_nums:"numbers",_bools:"booleans",_objs:"objects",_funcs:"functions",_fns:"functions",_regexs:"regexps",_arrs:"arrays",_elems:"elements",_docs:"documents",_nilmap:"nullmap",_strmap:"stringmap",_nummap:"numbermap",_boolmap:"booleanmap",_objmap:"objectmap",_funcmap:"functionmap",_fnmap:"functionmap",_regexmap:"regexpmap",_arrmap:"arraymap",_elemmap:"elementmap",_docmap:"documentmap"},
n=function(a,b,c,d,f){return{"|":function(b){return a.test(b)},"!":function(a){return b.test(a)},"?":function(a){return c.test(a)},"=":function(a){return d.test(a)},"*":function(a){return f.test(a)},all:/[^a-z\|]/g}}(/\|/,/\!/,/\?/,/\=/,/\*|any/);return{is:a,Is:a,are:b,Are:b}});
