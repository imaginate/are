/* node-are.js v0.0.1 (https://github.com/imaginate/are)
 * Copyright (c) 2015 Adam A Smith <adam@imaginate.life>
 * The Apache License (github.com/imaginate/are/blob/master/LICENSE.md) */
(function(m,c){function k(a,b){return"object"===a||!b&&"function"===a}function l(a,b){return(a=a&&b&&a.nodeType?!1:a)&&!b&&a.Object!==Object?!1:!!a}function p(a){a.is=n.is;a.Is=n.Is;a.are=n.are;a.Are=n.Are;return!0}var n=c(),u=k(typeof exports)&&l(exports,!0),a=k(typeof module)&&l(module,!0),b=k(typeof global,!0)&&l(global),r=k(typeof window)&&l(window),t=k(typeof self)&&l(self),v=k(typeof m)&&l(m);m=u&&a&&b?global:r&&window!==(m&&m.window)?window:t?self:v?m:Function("return this")();r&&p(window);
t&&p(self);p(m);u&&a&&(module.exports===exports?module.exports=n:p(exports));"function"===typeof define&&define.amd&&"object"===typeof define.amd&&define(function(){return n})})(this,function(m){function c(f,b){var e,d;b=1<b.length?v.call(b,0):b[0];if(!a.array(b))throw Error("An are."+f+"(vals) call did not receive multiple vals to evaluate");e=a[f];for(d=b.length;d--;)if(!e(b[d]))return!1;return!0}function k(a){return g.quesMark(a)?!g.exPoint(a):g.exPoint(a)}function l(a){return!g.exPoint(a)&&g.quesMark(a)}
function p(a,b){var e,d,c;for(e=b.length;e--;){d=b[e];d=w.hasOwnProperty(d)?w[d]:d;c=g.arrays(d)&&n;c=!c&&g.maps(d)&&u;if(!c&&!q.hasOwnProperty("_"+d))throw Error("Failed is/are Helper, _checkEachType(), Call: missing type check in _mainChecks hash map; missing type => "+d);if(c?c(a,d):q["_"+d](a))return!0}return!1}function n(f,b){var e,d;if(!a.arr(f))return!1;b=b.slice(0,-1);if(!q.hasOwnProperty("_"+b))throw Error("Failed is/are Helper, _checkArrayVals(), Call: missing type check in _mainChecks hash map; missing type => "+
b);d=q["_"+b];for(e=f.length;e--;)if(!d(f[e]))return!1;return!0}function u(f,b){var e,d;if(!a.obj(f))return!1;b=b.slice(0,-3);if(!q.hasOwnProperty("_"+b))throw Error("Failed is/are Helper, _checkMapVals(), Call: missing type check in _mainChecks hash map; missing type => "+b);d=q["_"+b];for(e in f)if(f.hasOwnProperty(e)&&!d(f[e]))return!1;return!0}function a(f,b){var e,d;if(!a._str(f))throw new TypeError("An is(type, val) call received a non-string type param");e=f.toLowerCase().replace(h.charBloat,
"").split("|");for(d=e.length;d--;)if(!g.allTypes(e[d]))throw Error("An is(type, val) call received an invalid data type within the type param; invalid type => "+e[d]);if(g.any(f))return 1<f.length&&r&&console.log("Confusing is() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;if(a.undefined(b)&&g.undefined(f))return!0;if(a["null"](b)&&k(f))return l(f);if(a["null"](b))a:{for(d=e.length;d--;)if(!g.nonNull(e[d])){e=!0;break a}e=
!1}else e=p(b,e);return e}function b(f){var b,e,d;if(!a._str(f))throw new TypeError("An are(type, vals) call received a non-string type param");b=f.toLowerCase().replace(h.charBloat,"").split("|");for(d=b.length;d--;)if(!g.allTypes(b[d]))throw Error("An are(type, vals) call received an invalid data type within the type param; invalid type => "+b[d]);e=2<arguments.length?v.call(arguments,1):arguments[1];if(!a.arr(e))throw new TypeError("An are(type, vals) call did not receive multiple vals to evaluate");
if(g.any(f))return 1<f.length&&r&&console.log("Confusing are() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;g.undefined(f)&&b.push("undefined");for(k(f)&&l(f)&&b.push("null");d--;)if(!p(e[d],b))return!1;return!0}var r="object"===typeof console&&"function"===typeof console.log,t=Object.prototype.toString,v=Array.prototype.slice;a["null"]=function(a){return null===a};a.nil=a["null"];a.undefined=function(a){return"undefined"===
typeof a};a["boolean"]=function(a){return"boolean"===typeof a};a.bool=a["boolean"];a.string=function(a,b){return(!1!==b||!!a)&&"string"===typeof a};a.str=a.string;a._string=function(b){return a.string(b,!1)};a._str=a._string;a.number=function(a,b){return(!1!==b||!!a)&&"number"===typeof a};a.num=a.number;a._number=function(b){return a.number(b,!1)};a._num=a._number;a.object=function(a,b){return!!a&&("object"===typeof a||!0===b&&"function"===typeof a)};a.obj=a.object;a._object=function(b){return a.object(b,
!0)};a._obj=a._object;a.func=function(a){return!!a&&"function"===typeof a};a.fn=a.func;try{a["function"]=a.func}catch(y){console.log("Your JS engine does not support is.function(). Use is.func() instead.")}a.array=function(b){return a.obj(b)&&"[object Array]"===t.call(b)};a.arr=a.array;a.regexp=function(b){return a.obj(b)&&"[object RegExp]"===t.call(b)};a.regex=a.regexp;a.document=function(b){return a.obj(b)&&9===b.nodeType};a.doc=a.document;a.element=function(b){return a.obj(b)&&1===b.nodeType};
a.elem=a.element;a.empty=function(b){var c;if(!a._obj(b))return!b;if(a.arr(b)||a.func(b))return!b.length;for(c in b)if(b.hasOwnProperty(c))return!1;return!0};b["null"]=function(){return c("null",arguments)};b.nil=b["null"];b.undefined=function(){return c("undefined",arguments)};b["boolean"]=function(){return c("boolean",arguments)};b.bool=b["boolean"];b.string=function(){return c("string",arguments)};b.str=b.string;b._string=function(){return c("_string",arguments)};b._str=b._string;b.number=function(){return c("number",
arguments)};b.num=b.number;b._number=function(){return c("_number",arguments)};b._num=b._number;b.object=function(){return c("object",arguments)};b.obj=b.object;b._object=function(){return c("_object",arguments)};b._obj=b._object;b.func=function(){return c("func",arguments)};b.fn=b.func;try{b["function"]=b.func}catch(z){console.log("Your JS engine does not support are.function(). Use are.func() instead.")}b.array=function(){return c("array",arguments)};b.arr=b.array;b.regexp=function(){return c("regexp",
arguments)};b.regex=b.regexp;b.document=function(){return c("document",arguments)};b.doc=b.document;b.element=function(){return c("element",arguments)};b.elem=b.element;b.empty=function(){return c("empty",arguments)};var x=require("fs");a.buffer=function(a){return Buffer.isBuffer(a)};a.buff=a.buffer;a.directory=function(b){var c;if(!a._string(b))return!1;try{c=x.statSync(b).isDirectory()}catch(e){c=!1}finally{return c}};a.dir=a.directory;a.directories=function(b,c){var e,d;if(!a.array(b))return!1;
a._string(c)&&c.replace(/([^\/]$)/,"$1/");e=a.directory;for(d=b.length;d--;)if(!e(b[d]))return!1;return!0};a.directorys=a.directories;a.dirs=a.directories;a.file=function(b){var c;if(!a._string(b))return!1;try{c=x.statSync(b).isFile()}catch(e){c=!1}finally{return c}};a.files=function(b,c){var e,d;if(!a.array(b))return!1;a._string(c)&&c.replace(/([^\/]$)/,"$1/");e=a.file;for(d=b.length;d--;)if(!e(b[d]))return!1;return!0};b.buffer=function(){return c("buffer",arguments)};b.buff=b.buffer;b.directory=
function(){return c("directory",arguments)};b.dir=b.directory;b.file=function(){return c("file",arguments)};var h={allTypes:/^(?:any|undefined|empty)$|^(?:null|string|number|boolean|object|regexp|function|array|element|document|nil|str|num|bool|obj|func|fn|regex|arr|elem|doc)(?:s|map)?$/,nonNull:/^(?:string|number|boolean|function|undefined|str|num|bool|func|fn)$/,arrays:/^(?:null|string|number|boolean|undefined|object|function|regexp|array|element|document)s$/,maps:/^(?:null|string|number|boolean|undefined|object|function|regexp|array|element|document)map$/,
exPoint:/\!/,quesMark:/\?/,undefined:/\=|undefined/,any:/\*|any/,charBloat:/[^a-z\|]/g},g={allTypes:h.allTypes.test,nonNull:h.nonNull.test,arrays:h.arrays.test,maps:h.maps.test,exPoint:h.exPoint.test,quesMark:h.quesMark.test,undefined:h.undefined.test,any:h.any.test,charBloat:h.charBloat.test},w={nil:"null",str:"string",num:"number",bool:"boolean",obj:"object",fn:"function",func:"function",regex:"regexp",arr:"array",elem:"element",doc:"document",nils:"nulls",strs:"strings",nums:"numbers",bools:"booleans",
objs:"objects",fns:"functions",funcs:"functions",regexs:"regexps",arrs:"arrays",elems:"elements",docs:"documents",nilmap:"nullmap",strmap:"stringmap",nummap:"numbermap",boolmap:"booleanmap",objmap:"objectmap",fnmap:"functionmap",funcmap:"functionmap",regexmap:"regexpmap",arrmap:"arraymap",elemmap:"elementmap",docmap:"documentmap"},q={_null:a.nil,_string:a._str,_number:a._num,_boolean:a.bool,_object:a.obj,_function:a.func,_undefined:a.undefined,_regexp:a.regex,_array:a.arr,_document:a.doc,_element:a.elem,
_empty:a.empty};return{is:a,Is:a,are:b,Are:b}});
