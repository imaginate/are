/* node-are.js v0.0.1 (https://github.com/imaginate/are)
 * Copyright (c) 2015 Adam A Smith <adam@imaginate.life>
 * The Apache License (github.com/imaginate/are/blob/master/LICENSE.md) */
(function(b,d){function f(a,g){return"object"===a||!g&&"function"===a}function n(a,g){return(a=a&&g&&a.nodeType?!1:a)&&!g&&a.Object!==Object?!1:!!a}function a(a){a.is=p.is;a.Is=p.Is;a.are=p.are;a.Are=p.Are;return!0}var p=d(),r=f(typeof exports)&&n(exports,!0),t=f(typeof module)&&n(module,!0),g=f(typeof global,!0)&&n(global),C=f(typeof window)&&n(window),c=f(typeof self)&&n(self),D=f(typeof b)&&n(b);b=r&&t&&g?global:C&&window!==(b&&b.window)?window:c?self:D?b:Function("return this")();C&&a(window);
c&&a(self);a(b);r&&t&&(module.exports===exports?module.exports=p:a(exports));"function"===typeof define&&define.amd&&"object"===typeof define.amd&&define(function(){return p})})(this,function(b){function d(g,b){var c,d;b=1<b.length?n.call(b,0):b[0];if(!a.array(b))throw Error("An are."+g+"(vals) call did not receive multiple vals to evaluate");c=a[g];for(d=b.length;d--;)if(!c(b[d]))return!1;return!0}var f=Object.prototype.toString,n=Array.prototype.slice,a=function(){function a(b,g){var h,e;if(!c.arr(b))return!1;
g=g.slice(0,-1);if(!w.hasOwnProperty("_"+g))throw Error("Failed is() Call: the private helper, checkArrayVals, encountered a missing type value property in the checks hash map; missing prop => "+g);e=w["_"+g];for(h=b.length;h--;)if(!e(b[h]))return!1;return!0}function b(a,g){var h,e;if(!c.obj(a))return!1;g=g.slice(0,-3);if(!w.hasOwnProperty("_"+g))throw Error("Failed is() Call: the private helper, checkMapVals, encountered a missing type value property in the checks hash map; missing prop => "+g);
e=w["_"+g];for(h in a)if(a.hasOwnProperty(h)&&!e(a[h]))return!1;return!0}var c={"null":function(a){return null===a},undefined:function(a){return"undefined"===typeof a},bool:function(a){return"boolean"===typeof a},str:function(a){return"string"===typeof a},num:function(a){return"number"===typeof a},obj:function(a){return!!a&&"object"===typeof a},func:function(a){return!!a&&"function"===typeof a},arr:function(a){return c.obj(a)&&"[object Array]"===f.call(a)},regex:function(a){return c.obj(a)&&"[object RegExp]"===
f.call(a)},doc:function(a){return c.obj(a)&&9===obj.nodeType},elem:function(a){return c.obj(a)&&1===obj.nodeType}},d=/^(?:any|null|undefined)$|^empty(?:array|map)?$|^(?:string|number|boolean|object|function|regexp|array|element|document|str|num|bool|obj|func|regex|arr|elem|doc)(?:s|map)?$/,n=/^(?:string|number|boolean|function)$/,p=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)s$/,t=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)map$/,
x=/\!/,y=/\?/,r=/\=|undefined|^(?:.+\|)?empty(?:\|.+)?$/,A=/\*|any/,z=/[^a-z\|]/g,u={str:"string",num:"number",bool:"boolean",obj:"object",func:"function",regex:"regexp",arr:"array",elem:"element",doc:"document",strs:"strings",nums:"numbers",bools:"booleans",objs:"objects",funcs:"functions",regexs:"regexps",arrs:"arrays",elems:"elements",docs:"documents",strmap:"stringmap",nummap:"numbermap",boolmap:"booleanmap",objmap:"objectmap",funcmap:"functionmap",regexmap:"regexpmap",arrmap:"arraymap",elemmap:"elementmap",
docmap:"documentmap",emptyarray:"undefineds",emptymap:"undefinedmap"},w={_string:c.str,_number:c.num,_boolean:c.bool,_object:c.obj,_function:c.func,_undefined:c.undefined,_regexp:c.regex,_array:c.arr,_document:c.doc,_element:c.elem,_null:function(){return!1}};return function(k,m){var h;if(!c.str(k))throw new TypeError("An is(type, val) call received a non-string type param");h=k.toLowerCase().replace(z,"").split("|");var e;for(e=h.length;e--;)if(!d.test(h[e]))throw Error("An is(type, val) call received an invalid data type within the type param; invalid type => "+
h[e]);if(A.test(k))return 1<k.length&&console.log("Confusing is() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;if(c.undefined(m)&&r.test(k))return!0;if(e=c["null"](m))e=y.test(k)?!x.test(k):x.test(k);if(e)return!x.test(k)&&y.test(k);if(c["null"](m))a:{for(e=h.length;e--;)if(!n.test(h[e])){h=!0;break a}h=!1}else a:{var l,f;for(e=h.length;e--;){l=h[e];l=u.hasOwnProperty(l)?u[l]:l;f=p.test(l)?a:null;f=!f&&t.test(l)?b:f;if(!f&&
!w.hasOwnProperty("_"+l))throw Error("Failed is() Call: the private helper, forEachCheckType, encountered a missing type value property in the checks hash map; missing prop => "+l);if(f?f(m,l):w["_"+l](m)){h=!0;break a}}h=!1}return h}}();a["null"]=function(a){return null===a};a.undefined=function(a){return"undefined"===typeof a};a["boolean"]=function(a){return"boolean"===typeof a};a.bool=a["boolean"];a.string=function(a,b){return(!1!==b||!!a)&&"string"===typeof a};a.str=a.string;a._string=function(b){return a.string(b,
!1)};a._str=a._string;a.number=function(a,b){return(!1!==b||!!a)&&"number"===typeof a};a.num=a.number;a._number=function(b){return a.number(b,!1)};a._num=a._number;a.object=function(a){return!!a&&"object"===typeof a};a.obj=a.object;a.func=function(a){return!!a&&"function"===typeof a};try{a["function"]=a.func}catch(p){console.log("Your JS engine does not support is.function(). Use is.func() instead.")}a.array=function(b){return a.obj(b)&&"[object Array]"===f.call(b)};a.arr=a.array;a.regexp=function(b){return a.obj(b)&&
"[object RegExp]"===f.call(b)};a.regex=a.regexp;a.document=function(b){return a.obj(b)&&9===b.nodeType};a.doc=a.document;a.element=function(b){return a.obj(b)&&1===b.nodeType};a.elem=a.element;b=function(){function a(b,g){var d,h;if(!c.arr(b))return!1;g=g.slice(0,-1);if(!u.hasOwnProperty("_"+g))throw Error("Failed is() Call: the private helper, checkArrayVals, encountered a missing type value property in the checks hash map; missing prop => "+g);h=u["_"+g];for(d=b.length;d--;)if(h(b[d]))return!1;
return!0}function b(a,g){var d,h;if(!c.obj(a))return!1;g=g.slice(0,-3);if(!u.hasOwnProperty("_"+g))throw Error("Failed is() Call: the private helper, checkMapVals, encountered a missing type value property in the checks hash map; missing prop => "+g);h=u["_"+g];for(d in a)if(a.hasOwnProperty(d)&&!h(a[d]))return!1;return!0}var c={"null":function(a){return null===a},undefined:function(a){return"undefined"===typeof a},bool:function(a){return"boolean"===typeof a},str:function(a){return"string"===typeof a},
num:function(a){return"number"===typeof a},obj:function(a){return!!a&&"object"===typeof a},func:function(a){return!!a&&"function"===typeof a},arr:function(a){return c.obj(a)&&"[object Array]"===f.call(a)},regex:function(a){return c.obj(a)&&"[object RegExp]"===f.call(a)},doc:function(a){return c.obj(a)&&9===obj.nodeType},elem:function(a){return c.obj(a)&&1===obj.nodeType}},d=/^(?:any|null|undefined)$|^empty(?:array|map)?$|^(?:string|number|boolean|object|function|regexp|array|element|document|str|num|bool|obj|func|regex|arr|elem|doc)(?:s|map)?$/,
p=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)s$/,t=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)map$/,r=/\!/,x=/\?/,y=/\=|undefined|^(?:.+\|)?empty(?:\|.+)?$/,E=/\*|any/,A=/[^a-z\|]/g,z={str:"string",num:"number",bool:"boolean",obj:"object",func:"function",regex:"regexp",arr:"array",elem:"element",doc:"document",strs:"strings",nums:"numbers",bools:"booleans",objs:"objects",funcs:"functions",regexs:"regexps",arrs:"arrays",
elems:"elements",docs:"documents",strmap:"stringmap",nummap:"numbermap",boolmap:"booleanmap",objmap:"objectmap",funcmap:"functionmap",regexmap:"regexpmap",arrmap:"arraymap",elemmap:"elementmap",docmap:"documentmap",emptyarray:"undefineds",emptymap:"undefinedmap"},u={_string:c.str,_number:c.num,_boolean:c.bool,_object:c.obj,_function:c.func,_undefined:c.undefined,_regexp:c.regex,_array:c.arr,_document:c.doc,_element:c.elem,_null:c["null"]};return function(f){var k,m,h;if(!c.str(f))throw new TypeError("An are(type, vals) call received a non-string type param");
k=f.toLowerCase().replace(A,"").split("|");m=k;var e;for(e=m.length;e--;)if(!d.test(m[e]))throw Error("An are(type, vals) call received an invalid data type within the type param; invalid type => "+m[e]);m=2<arguments.length?n.call(arguments,1):arguments[1];if(!c.arr(m))throw new TypeError("An are(type, vals) call did not receive multiple vals to evaluate");if(E.test(f))return 1<f.length&&console.log("Confusing are() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),
!0;y.test(f)&&k.push("undefined");e=f;if(e=x.test(e)?!r.test(e):r.test(e))e=f,e=!r.test(e)&&x.test(e);for(e&&k.push("null");h--;){a:{e=m[h];for(var l=k,B=void 0,q=void 0,v=void 0,B=l.length;B--;){q=l[B];q=z.hasOwnProperty(q)?z[q]:q;v=p.test(q)?a:null;v=!v&&t.test(q)?b:v;if(!v&&!u.hasOwnProperty("_"+q))throw Error("Failed are() Call: the private helper, forEachCheckType, encountered a missing type value property in the checks hash map; missing prop => "+q);if(v?v(e,q):u["_"+q](e)){e=!0;break a}}e=
!1}if(!e)return!1}return!0}}();b["null"]=function(){return d("null",arguments)};b.undefined=function(){return d("undefined",arguments)};b["boolean"]=function(){return d("boolean",arguments)};b.bool=b["boolean"];b.string=function(){return d("string",arguments)};b.str=b.string;b._string=function(){return d("_string",arguments)};b._str=b._string;b.number=function(){return d("number",arguments)};b.num=b.number;b._number=function(){return d("_number",arguments)};b._num=b._number;b.object=function(){return d("object",
arguments)};b.obj=b.object;b.func=function(){return d("func",arguments)};try{b["function"]=b.func}catch(r){console.log("Your JS engine does not support are.function(). Use are.func() instead.")}b.array=function(){return d("array",arguments)};b.arr=b.array;b.regexp=function(){return d("regexp",arguments)};b.regex=b.regexp;b.document=function(){return d("document",arguments)};b.doc=b.document;b.element=function(){return d("element",arguments)};b.elem=b.element;var t=require("fs");a.buffer=function(a){return Buffer.isBuffer(a)};
a.buff=a.buffer;a.directory=function(b){var d;if(!a._string(b))return!1;try{d=t.statSync(b).isDirectory()}catch(c){d=!1}finally{return d}};a.dir=a.directory;a.directories=function(b,d){var c,f;if(!a.array(b))return!1;a._string(d)&&d.replace(/([^\/]$)/,"$1/");c=a.directory;for(f=b.length;f--;)if(!c(b[f]))return!1;return!0};a.directorys=a.directories;a.dirs=a.directories;a.file=function(b){var d;if(!a._string(b))return!1;try{d=t.statSync(b).isFile()}catch(c){d=!1}finally{return d}};a.files=function(b,
d){var c,f;if(!a.array(b))return!1;a._string(d)&&d.replace(/([^\/]$)/,"$1/");c=a.file;for(f=b.length;f--;)if(!c(b[f]))return!1;return!0};b.buffer=function(){return d("buffer",arguments)};b.buff=b.buffer;b.directory=function(){return d("directory",arguments)};b.dir=b.directory;b.file=function(){return d("file",arguments)};return{is:a,Is:a,are:b,Are:b}});
