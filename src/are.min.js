/* are.js v0.0.1 (https://github.com/imaginate/are)
 * Copyright (c) 2015 Adam A Smith <adam@imaginate.life>
 * The Apache License (github.com/imaginate/are/blob/master/LICENSE.md) */
(function(c,q){function a(a,b){return"object"===a||!b&&"function"===a}function l(a,b){return(a=a&&b&&a.nodeType?!1:a)&&!b&&a.Object!==Object?!1:!!a}function d(a){a.is=b.is;a.Is=b.Is;a.are=b.are;a.Are=b.Are;return!0}var b=q(),C=a(typeof exports)&&l(exports,!0),e=a(typeof module)&&l(module,!0),z=a(typeof global,!0)&&l(global),u=a(typeof window)&&l(window),v=a(typeof self)&&l(self),x=a(typeof c)&&l(c);c=C&&e&&z?global:u&&window!==(c&&c.window)?window:v?self:x?c:Function("return this")();u&&d(window);
v&&d(self);d(c);C&&e&&(module.exports===exports?(module.exports=b,d(module.exports)):d(exports));"function"===typeof define&&define.amd&&"object"===typeof define.amd&&define(function(){return b})})(this,function(){var c=Object.prototype.toString,q=Array.prototype.slice,a=function(){function a(h,b){var d,f;if(!e.arr(h))return!1;b=b.slice(0,-1);if(!w.hasOwnProperty("_"+b))throw Error("Failed is() Call: the private helper, checkArrayVals, encountered a missing type value property in the checks hash map; missing prop => "+
b);f=w["_"+b];for(d=h.length;d--;)if(!f(h[d]))return!1;return!0}function d(a,b){var g,f;if(!e.obj(a))return!1;b=b.slice(0,-3);if(!w.hasOwnProperty("_"+b))throw Error("Failed is() Call: the private helper, checkMapVals, encountered a missing type value property in the checks hash map; missing prop => "+b);f=w["_"+b];for(g in a)if(a.hasOwnProperty(g)&&!f(a[g]))return!1;return!0}var e={"null":function(a){return null===a},undefined:function(a){return"undefined"===typeof a},bool:function(a){return"boolean"===
typeof a},str:function(a){return"string"===typeof a},num:function(a){return"number"===typeof a},obj:function(a){return!!a&&"object"===typeof a},func:function(a){return!!a&&"function"===typeof a},arr:function(a){return e.obj(a)&&"[object Array]"===c.call(a)},regex:function(a){return e.obj(a)&&"[object RegExp]"===c.call(a)},doc:function(a){return e.obj(a)&&9===obj.nodeType},elem:function(a){return e.obj(a)&&1===obj.nodeType}},z=/^(?:any|null|undefined)$|^empty(?:array|map)?$|^(?:string|number|boolean|object|function|regexp|array|element|document|str|num|bool|obj|func|regex|arr|elem|doc)(?:s|map)?$/,
u=/^(?:string|number|boolean|function)$/,v=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)s$/,l=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)map$/,t=/\!/,q=/\?/,A=/\=|undefined|^(?:.+\|)?empty(?:\|.+)?$/,B=/\*|any/,y=/[^a-z\|]/g,p={str:"string",num:"number",bool:"boolean",obj:"object",func:"function",regex:"regexp",arr:"array",elem:"element",doc:"document",strs:"strings",nums:"numbers",bools:"booleans",objs:"objects",funcs:"functions",
regexs:"regexps",arrs:"arrays",elems:"elements",docs:"documents",strmap:"stringmap",nummap:"numbermap",boolmap:"booleanmap",objmap:"objectmap",funcmap:"functionmap",regexmap:"regexpmap",arrmap:"arraymap",elemmap:"elementmap",docmap:"documentmap",emptyarray:"undefineds",emptymap:"undefinedmap"},w={_string:e.str,_number:e.num,_boolean:e.bool,_object:e.obj,_function:e.func,_undefined:e.undefined,_regexp:e.regex,_array:e.arr,_document:e.doc,_element:e.elem,_null:function(){return!1}};return function(h,
k){var g;if(!e.str(h))throw new TypeError("An is(type, val) call received a non-string type param");g=h.toLowerCase().replace(y,"").split("|");var f;for(f=g.length;f--;)if(!z.test(g[f]))throw Error("An is(type, val) call received an invalid data type within the type param; invalid type => "+g[f]);if(B.test(h))return 1<h.length&&console.log("Confusing is() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;if(e.undefined(k)&&A.test(h))return!0;
if(f=e["null"](k))f=q.test(h)?!t.test(h):t.test(h);if(f)return!t.test(h)&&q.test(h);if(e["null"](k))a:{for(f=g.length;f--;)if(!u.test(g[f])){g=!0;break a}g=!1}else a:{var c,m;for(f=g.length;f--;){c=g[f];c=p.hasOwnProperty(c)?p[c]:c;m=v.test(c)?a:null;m=!m&&l.test(c)?d:m;if(!m&&!w.hasOwnProperty("_"+c))throw Error("Failed is() Call: the private helper, forEachCheckType, encountered a missing type value property in the checks hash map; missing prop => "+c);if(m?m(k,c):w["_"+c](k)){g=!0;break a}}g=!1}return g}}();
a["null"]=function(a){return null===a};a.undefined=function(a){return"undefined"===typeof a};a["boolean"]=function(a){return"boolean"===typeof a};a.bool=a["boolean"];a.string=function(a,d){return(!1!==d||!!a)&&"string"===typeof a};a.str=a.string;a.number=function(a,d){return(!1!==d||!!a)&&"number"===typeof a};a.num=a.number;a.object=function(a){return!!a&&"object"===typeof a};a.obj=a.object;a.func=function(a){return!!a&&"function"===typeof a};try{a["function"]=a.func}catch(l){console.log("Your JS engine does not support is.function(). Use is.func() instead.")}a.array=
function(b){return a.obj(b)&&"[object Array]"===c.call(b)};a.arr=a.array;a.regexp=function(b){return a.obj(b)&&"[object RegExp]"===c.call(b)};a.regex=a.regexp;a.document=function(b){return a.obj(b)&&9===b.nodeType};a.doc=a.document;a.element=function(b){return a.obj(b)&&1===b.nodeType};a.elem=a.element;var d=function(){function a(d,b){var c,g;if(!e.arr(d))return!1;b=b.slice(0,-1);if(!p.hasOwnProperty("_"+b))throw Error("Failed is() Call: the private helper, checkArrayVals, encountered a missing type value property in the checks hash map; missing prop => "+
b);g=p["_"+b];for(c=d.length;c--;)if(g(d[c]))return!1;return!0}function d(a,b){var c,g;if(!e.obj(a))return!1;b=b.slice(0,-3);if(!p.hasOwnProperty("_"+b))throw Error("Failed is() Call: the private helper, checkMapVals, encountered a missing type value property in the checks hash map; missing prop => "+b);g=p["_"+b];for(c in a)if(a.hasOwnProperty(c)&&!g(a[c]))return!1;return!0}var e={"null":function(a){return null===a},undefined:function(a){return"undefined"===typeof a},bool:function(a){return"boolean"===
typeof a},str:function(a){return"string"===typeof a},num:function(a){return"number"===typeof a},obj:function(a){return!!a&&"object"===typeof a},func:function(a){return!!a&&"function"===typeof a},arr:function(a){return e.obj(a)&&"[object Array]"===c.call(a)},regex:function(a){return e.obj(a)&&"[object RegExp]"===c.call(a)},doc:function(a){return e.obj(a)&&9===obj.nodeType},elem:function(a){return e.obj(a)&&1===obj.nodeType}},l=/^(?:any|null|undefined)$|^empty(?:array|map)?$|^(?:string|number|boolean|object|function|regexp|array|element|document|str|num|bool|obj|func|regex|arr|elem|doc)(?:s|map)?$/,
u=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)s$/,v=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)map$/,x=/\!/,t=/\?/,E=/\=|undefined|^(?:.+\|)?empty(?:\|.+)?$/,A=/\*|any/,B=/[^a-z\|]/g,y={str:"string",num:"number",bool:"boolean",obj:"object",func:"function",regex:"regexp",arr:"array",elem:"element",doc:"document",strs:"strings",nums:"numbers",bools:"booleans",objs:"objects",funcs:"functions",regexs:"regexps",arrs:"arrays",
elems:"elements",docs:"documents",strmap:"stringmap",nummap:"numbermap",boolmap:"booleanmap",objmap:"objectmap",funcmap:"functionmap",regexmap:"regexpmap",arrmap:"arraymap",elemmap:"elementmap",docmap:"documentmap",emptyarray:"undefineds",emptymap:"undefinedmap"},p={_string:e.str,_number:e.num,_boolean:e.bool,_object:e.obj,_function:e.func,_undefined:e.undefined,_regexp:e.regex,_array:e.arr,_document:e.doc,_element:e.elem,_null:e["null"]};return function(c){var h,k,g;if(!e.str(c))throw new TypeError("An are(type, vals) call received a non-string type param");
h=c.toLowerCase().replace(B,"").split("|");k=h;var f;for(f=k.length;f--;)if(!l.test(k[f]))throw Error("An are(type, vals) call received an invalid data type within the type param; invalid type => "+k[f]);k=2<arguments.length?q.call(arguments,1):arguments[1];if(!e.arr(k))throw new TypeError("An are(type, vals) call did not receive multiple vals to evaluate");if(A.test(c))return 1<c.length&&console.log("Confusing are() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),
!0;E.test(c)&&h.push("undefined");f=c;if(f=t.test(f)?!x.test(f):x.test(f))f=c,f=!x.test(f)&&t.test(f);for(f&&h.push("null");g--;){a:{f=k[g];for(var D=h,m=void 0,n=void 0,r=void 0,m=D.length;m--;){n=D[m];n=y.hasOwnProperty(n)?y[n]:n;r=u.test(n)?a:null;r=!r&&v.test(n)?d:r;if(!r&&!p.hasOwnProperty("_"+n))throw Error("Failed are() Call: the private helper, forEachCheckType, encountered a missing type value property in the checks hash map; missing prop => "+n);if(r?r(f,n):p["_"+n](f)){f=!0;break a}}f=
!1}if(!f)return!1}return!0}}();(function(){function b(b,c){c=1<c.length?q.call(c,0):c[0];if(!a.arr(c))throw Error("An are."+b+"(vals) call did not receive multiple vals to evaluate");return c}function c(a,b){var d;for(d=b.length;d--;)if(!a(b[d]))return!1;return!0}d["null"]=function(){return c(a["null"],b("null",arguments))};d.undefined=function(){return c(a.undefined,b("undefined",arguments))};d["boolean"]=function(){return c(a["boolean"],b("boolean",arguments))};d.bool=d["boolean"];d.string=function(){return c(a.string,
b("string",arguments))};d.str=d.string;d.number=function(){return c(a.number,b("number",arguments))};d.num=d.number;d.object=function(){return c(a.object,b("object",arguments))};d.obj=d.object;d.func=function(){return c(a.func,b("function",arguments))};try{d["function"]=d.func}catch(e){console.log("Your JS engine does not support are.function(). Use are.func() instead.")}d.array=function(){return c(a.array,b("array",arguments))};d.arr=d.array;d.regexp=function(){return c(a.regexp,b("regexp",arguments))};
d.regex=d.regexp;d.document=function(){return c(a.document,b("document",arguments))};d.doc=d.document;d.element=function(){return c(a.element,b("element",arguments))};d.elem=d.element})();return{is:a,Is:a,are:d,Are:d}});
