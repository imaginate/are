/* are.js v0.0.1 (https://github.com/imaginate/are)
 * Copyright (c) 2015 Adam A Smith <adam@imaginate.life>
 * The Apache License (github.com/imaginate/are/blob/master/LICENSE.md) */
(function(e,q){function a(a,c){return"object"===a||!c&&"function"===a}function m(a,c){return(a=a&&c&&a.nodeType?!1:a)&&!c&&a.Object!==Object?!1:!!a}function b(a){a.is=c.is;a.Is=c.Is;a.are=c.are;a.Are=c.Are;return!0}var c=q(),D=a(typeof exports)&&m(exports,!0),d=a(typeof module)&&m(module,!0),z=a(typeof global,!0)&&m(global),u=a(typeof window)&&m(window),v=a(typeof self)&&m(self),x=a(typeof e)&&m(e);e=D&&d&&z?global:u&&window!==(e&&e.window)?window:v?self:x?e:Function("return this")();u&&b(window);
v&&b(self);b(e);D&&d&&(module.exports===exports?(module.exports=c,b(module.exports)):b(exports));"function"===typeof define&&define.amd&&"object"===typeof define.amd&&define(function(){return c})})(this,function(){var e=Object.prototype.toString,q=Array.prototype.slice,a=function(){function a(k,c){var b,f;if(!d.arr(k))return!1;c=c.slice(0,-1);if(!w.hasOwnProperty("_"+c))throw Error("Failed is() Call: the private helper, checkArrayVals, encountered a missing type value property in the checks hash map; missing prop => "+
c);f=w["_"+c];for(b=k.length;b--;)if(!f(k[b]))return!1;return!0}function b(a,c){var g,f;if(!d.obj(a))return!1;c=c.slice(0,-3);if(!w.hasOwnProperty("_"+c))throw Error("Failed is() Call: the private helper, checkMapVals, encountered a missing type value property in the checks hash map; missing prop => "+c);f=w["_"+c];for(g in a)if(a.hasOwnProperty(g)&&!f(a[g]))return!1;return!0}var d={"null":function(a){return null===a},undefined:function(a){return"undefined"===typeof a},bool:function(a){return"boolean"===
typeof a},str:function(a){return"string"===typeof a},num:function(a){return"number"===typeof a},obj:function(a){return!!a&&"object"===typeof a},func:function(a){return!!a&&"function"===typeof a},arr:function(a){return d.obj(a)&&"[object Array]"===e.call(a)},regex:function(a){return d.obj(a)&&"[object RegExp]"===e.call(a)},doc:function(a){return d.obj(a)&&9===obj.nodeType},elem:function(a){return d.obj(a)&&1===obj.nodeType}},z=/^(?:any|null|undefined)$|^empty(?:array|map)?$|^(?:string|number|boolean|object|function|regexp|array|element|document|str|num|bool|obj|func|regex|arr|elem|doc)(?:s|map)?$/,
u=/^(?:string|number|boolean|function)$/,v=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)s$/,m=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)map$/,t=/\!/,q=/\?/,A=/\=|undefined|^(?:.+\|)?empty(?:\|.+)?$/,B=/\*|any/,y=/[^a-z\|]/g,p={str:"string",num:"number",bool:"boolean",obj:"object",func:"function",regex:"regexp",arr:"array",elem:"element",doc:"document",strs:"strings",nums:"numbers",bools:"booleans",objs:"objects",funcs:"functions",
regexs:"regexps",arrs:"arrays",elems:"elements",docs:"documents",strmap:"stringmap",nummap:"numbermap",boolmap:"booleanmap",objmap:"objectmap",funcmap:"functionmap",regexmap:"regexpmap",arrmap:"arraymap",elemmap:"elementmap",docmap:"documentmap",emptyarray:"undefineds",emptymap:"undefinedmap"},w={_string:d.str,_number:d.num,_boolean:d.bool,_object:d.obj,_function:d.func,_undefined:d.undefined,_regexp:d.regex,_array:d.arr,_document:d.doc,_element:d.elem,_null:function(){return!1}};return function(k,
h){var g;if(!d.str(k))throw new TypeError("An is(type, val) call received a non-string type param");g=k.toLowerCase().replace(y,"").split("|");var f;for(f=g.length;f--;)if(!z.test(g[f]))throw Error("An is(type, val) call received an invalid data type within the type param; invalid type => "+g[f]);if(B.test(k))return 1<k.length&&console.log("Confusing is() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;if(d.undefined(h)&&A.test(k))return!0;
if(f=d["null"](h))f=q.test(k)?!t.test(k):t.test(k);if(f)return!t.test(k)&&q.test(k);if(d["null"](h))a:{for(f=g.length;f--;)if(!u.test(g[f])){g=!0;break a}g=!1}else a:{var l,e;for(f=g.length;f--;){l=g[f];l=p.hasOwnProperty(l)?p[l]:l;e=v.test(l)?a:null;e=!e&&m.test(l)?b:e;if(!e&&!w.hasOwnProperty("_"+l))throw Error("Failed is() Call: the private helper, forEachCheckType, encountered a missing type value property in the checks hash map; missing prop => "+l);if(e?e(h,l):w["_"+l](h)){g=!0;break a}}g=!1}return g}}();
a["null"]=function(a){return null===a};a.undefined=function(a){return"undefined"===typeof a};a["boolean"]=function(a){return"boolean"===typeof a};a.bool=a["boolean"];a.string=function(a,b){return(!1!==b||!!a)&&"string"===typeof a};a.str=a.string;a.number=function(a,b){return(!1!==b||!!a)&&"number"===typeof a};a.num=a.number;a.object=function(a){return!!a&&"object"===typeof a};a.obj=a.object;a.func=function(a){return!!a&&"function"===typeof a};try{a["function"]=a.func}catch(m){console.log("Your JS engine does not support is.function(). Use is.func() instead.")}a.array=
function(b){return a.obj(b)&&"[object Array]"===toStr.call(b)};a.arr=a.array;a.regexp=function(b){return a.obj(b)&&"[object RegExp]"===toStr.call(b)};a.regex=a.regexp;a.document=function(b){return a.obj(b)&&9===obj.nodeType};a.doc=a.document;a.element=function(b){return a.obj(b)&&1===obj.nodeType};a.elem=a.element;var b=function(){function a(b,c){var h,g;if(!d.arr(b))return!1;c=c.slice(0,-1);if(!p.hasOwnProperty("_"+c))throw Error("Failed is() Call: the private helper, checkArrayVals, encountered a missing type value property in the checks hash map; missing prop => "+
c);g=p["_"+c];for(h=b.length;h--;)if(g(b[h]))return!1;return!0}function b(a,c){var h,g;if(!d.obj(a))return!1;c=c.slice(0,-3);if(!p.hasOwnProperty("_"+c))throw Error("Failed is() Call: the private helper, checkMapVals, encountered a missing type value property in the checks hash map; missing prop => "+c);g=p["_"+c];for(h in a)if(a.hasOwnProperty(h)&&!g(a[h]))return!1;return!0}var d={"null":function(a){return null===a},undefined:function(a){return"undefined"===typeof a},bool:function(a){return"boolean"===
typeof a},str:function(a){return"string"===typeof a},num:function(a){return"number"===typeof a},obj:function(a){return!!a&&"object"===typeof a},func:function(a){return!!a&&"function"===typeof a},arr:function(a){return d.obj(a)&&"[object Array]"===e.call(a)},regex:function(a){return d.obj(a)&&"[object RegExp]"===e.call(a)},doc:function(a){return d.obj(a)&&9===obj.nodeType},elem:function(a){return d.obj(a)&&1===obj.nodeType}},m=/^(?:any|null|undefined)$|^empty(?:array|map)?$|^(?:string|number|boolean|object|function|regexp|array|element|document|str|num|bool|obj|func|regex|arr|elem|doc)(?:s|map)?$/,
u=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)s$/,v=/^(?:string|number|boolean|undefined|object|function|regexp|array|element|document)map$/,x=/\!/,t=/\?/,E=/\=|undefined|^(?:.+\|)?empty(?:\|.+)?$/,A=/\*|any/,B=/[^a-z\|]/g,y={str:"string",num:"number",bool:"boolean",obj:"object",func:"function",regex:"regexp",arr:"array",elem:"element",doc:"document",strs:"strings",nums:"numbers",bools:"booleans",objs:"objects",funcs:"functions",regexs:"regexps",arrs:"arrays",
elems:"elements",docs:"documents",strmap:"stringmap",nummap:"numbermap",boolmap:"booleanmap",objmap:"objectmap",funcmap:"functionmap",regexmap:"regexpmap",arrmap:"arraymap",elemmap:"elementmap",docmap:"documentmap",emptyarray:"undefineds",emptymap:"undefinedmap"},p={_string:d.str,_number:d.num,_boolean:d.bool,_object:d.obj,_function:d.func,_undefined:d.undefined,_regexp:d.regex,_array:d.arr,_document:d.doc,_element:d.elem,_null:d["null"]};return function(e){var k,h,g;if(!d.str(e))throw new TypeError("An are(type, vals) call received a non-string type param");
k=e.toLowerCase().replace(B,"").split("|");h=k;var f;for(f=h.length;f--;)if(!m.test(h[f]))throw Error("An are(type, vals) call received an invalid data type within the type param; invalid type => "+h[f]);h=2<arguments.length?q.call(arguments,1):arguments[1];if(!d.arr(h))throw new TypeError("An are(type, vals) call did not receive multiple vals to evaluate");if(A.test(e))return 1<e.length&&console.log("Confusing are() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),
!0;E.test(e)&&k.push("undefined");f=e;if(f=t.test(f)?!x.test(f):x.test(f))f=e,f=!x.test(f)&&t.test(f);for(f&&k.push("null");g--;){a:{f=h[g];for(var l=k,C=void 0,n=void 0,r=void 0,C=l.length;C--;){n=l[C];n=y.hasOwnProperty(n)?y[n]:n;r=u.test(n)?a:null;r=!r&&v.test(n)?b:r;if(!r&&!p.hasOwnProperty("_"+n))throw Error("Failed are() Call: the private helper, forEachCheckType, encountered a missing type value property in the checks hash map; missing prop => "+n);if(r?r(f,n):p["_"+n](f)){f=!0;break a}}f=
!1}if(!f)return!1}return!0}}();(function(){function c(b,c){c=1<c.length?q.call(c,0):c[0];if(!a.arr(c))throw Error("An are."+b+"(vals) call did not receive multiple vals to evaluate");return c}function e(a,b){var c;for(c=b.length;c--;)if(!a(b[c]))return!1;return!0}b["null"]=function(){return e(a["null"],c("null",arguments))};b.undefined=function(){return e(a.undefined,c("undefined",arguments))};b["boolean"]=function(){return e(a["boolean"],c("boolean",arguments))};b.bool=b["boolean"];b.string=function(){return e(a.string,
c("string",arguments))};b.str=b.string;b.number=function(){return e(a.number,c("number",arguments))};b.num=b.number;b.object=function(){return e(a.object,c("object",arguments))};b.obj=b.object;b.func=function(){return e(a.func,c("function",arguments))};try{b["function"]=b.func}catch(d){console.log("Your JS engine does not support are.function(). Use are.func() instead.")}b.array=function(){return e(a.array,c("array",arguments))};b.arr=b.array;b.regexp=function(){return e(a.regexp,c("regexp",arguments))};
b.regex=b.regexp;b.document=function(){return e(a.document,c("document",arguments))};b.doc=b.document;b.element=function(){return e(a.element,c("element",arguments))};b.elem=b.element})();return{is:a,Is:a,are:b,Are:b}});
