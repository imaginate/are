/* are.js v0.3.2 (https://github.com/imaginate/are)
 * Copyright (c) 2015 Adam A Smith <adam@imaginate.life>
 * The Apache License (github.com/imaginate/are/blob/master/LICENSE.md) */
(function(h,r){function k(a,b){return"object"===a||!b&&"function"===a}function c(a,b){return(a=a&&b&&a.nodeType?!1:a)&&!b&&a.Object!==Object?!1:!!a}function g(a){a.is=f.is;a.Is=f.Is;a.are=f.are;a.Are=f.Are;return!0}var f=r(),t=k(typeof exports)&&c(exports,!0),u=k(typeof module)&&c(module,!0),v=k(typeof global,!0)&&c(global),a=k(typeof window)&&c(window),b=k(typeof self)&&c(self),p=k(typeof h)&&c(h);h=t&&u&&v?global:a&&window!==(h&&h.window)?window:b?self:p?h:Function("return this")();a&&g(window);
b&&g(self);g(h);t&&u&&(module.exports===exports?module.exports=f:g(exports));"function"===typeof define&&define.amd&&"object"===typeof define.amd&&define(function(){return f})})(this,function(h){function r(a){return"The val for is/are."+a+" calls must be a number."}function k(a){return"The val for is/are."+a+" calls must be a whole number."}function c(e,b){var d,c;b=1<b.length?b:b[0];if(!a._arr(b))throw Error("An are."+e+"(vals) call did not receive multiple vals to evaluate");d=a[e];for(c=b.length;c--;)if(!d(b[c]))return!1;
return!0}function g(a,b,d){for(var c in b)q(b,c)&&f(a,c,b[c],d)}function f(e,b,d,c){d=q(f,e)?f[e](d):d;c=!1!==c;w["_"+b]=function(e,b){b=a.bool(b)?b:c;return a.nil(e)?b:d(e)}}function t(a,b,d){var c;for(c=a.length;c--;)if(w[a[c]](b,d))return!0;return!1}function u(a){var b,d,c;b=a.toLowerCase().replace(l.all,"").split("|");for(c=b.length;c--;){d="_"+b[c];d=q(y,d)?"_"+y[d]:d;if(!q(w,d))return d;b[c]=d}l["="](a)&&b.push("_undefined");return b}function v(a){return(l["?"](a)?l["!"](a):!l["!"](a))?h:!l["!"](a)&&
l["?"](a)}function a(e,b){var c,f;if(!a._str(e))throw new TypeError("An is(typeStr, val) call received a non-string typeStr param");if(l["*"](e))return"*"!==e&&"any"!==e&&p&&console.log("Confusing is() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;c=u(e);if(a.str(c))throw Error("Invalid is(typeStr, val) Call: invalid type in the typeStr param; invalid type => "+c);f=v(e);return t(c,b,f)}function b(e,b){var c,f;if(!a._str(e))throw new TypeError("An are(typeStr, vals) call received a non-string typeStr param");
b=2<arguments.length?z.call(arguments,1):b;if(!a.arr(b))throw new TypeError("An are(typeStr, vals) call did not receive multiple vals to evaluate");if(l["*"](e))return"*"!==e&&"any"!==e&&p&&console.log("Confusing are() Syntax: an asterisk should not be used with other data types as the check will pass regardless of the value's type"),!0;c=u(e);if(a.str(c))throw Error("Invalid are(typeStr, val) Call: invalid type in the typeStr param; invalid type => "+c);f=v(e);a:{var g=b,x;for(x=g.length;x--;)if(!t(c,
g[x],f)){c=!1;break a}c=!0}return c}var p="object"===typeof console&&"function"===typeof console.log,n=Object.prototype.toString,z=Array.prototype.slice,q=function(a){return function(b,c){return a.call(b,c)}}(Object.prototype.hasOwnProperty),m=function(a,b,c){p&&console.log("Your JS engine does not support "+a+"."+b+"(). Use "+a+"."+c+"() instead.")};a.nil=function(a){return null===a};try{a["null"]=a.nil}catch(B){m("is","null","nil")}a.undefined=function(a){return"undefined"===typeof a};a.bool=function(a){return"boolean"===
typeof a};try{a["boolean"]=a.bool}catch(C){m("is","boolean","bool")}a.string=function(a,b){return(!1!==b||!!a)&&"string"===typeof a};a.str=a.string;a._string=function(e){return a.string(e,!1)};a._str=a._string;a.number=function(a,b){return(!1!==b||!!a)&&"number"===typeof a&&a===a};a.num=a.number;a._number=function(b){return a.number(b,!1)};a._num=a._number;a.nan=function(a){return a!==a};a.object=function(a,b){return(a=!!a&&typeof a)&&("object"===a||!0===b&&"function"===a)};a.obj=a.object;a._object=
function(b){return a.obj(b,!0)};a._obj=a._object;a.func=function(a){return!!a&&"function"===typeof a};a.fn=a.func;try{a["function"]=a.func}catch(D){m("is","function","func")}a.array=function(b,c){if(!a.obj(b))return!1;b=n.call(b);return"[object Array]"===b||!0===c&&"[object Arguments]"===b};a.arr=a.array;a._array=function(b){return a.arr(b,!0)};a._arr=a._array;a.regexp=function(b){return a.obj(b)&&"[object RegExp]"===n.call(b)};a.regex=a.regexp;a.date=function(b){return a.obj(b)&&"[object Date]"===
n.call(b)};a.error=function(b){return a.obj(b)&&"[object Error]"===n.call(b)};a.err=a.error;a.args=function(b){return a.obj(b)&&"[object Arguments]"===n.call(b)};(function(){if(!a.args(arguments)){a.array=function(b){return a.obj(b)?"[object Array]"===n.call(b)||!0===args&&"callee"in b:!1};a.arr=a.array;a.args=function(b){return a.obj(b)&&"callee"in b};try{a.args({})}catch(b){a.array=function(b){return a.obj(b)&&"[object Array]"===n.call(b)},a.arr=a.array,a.args=a.obj,p&&console.log("Your JS engine does not support checking for Arguments objects. Arguments checks will only check if val is an object.")}}})();
try{a.arguments=a.args}catch(E){m("is","arguments","args")}a.document=function(b){return a.obj(b)&&9===b.nodeType};a.doc=a.document;a.element=function(b){return a.obj(b)&&1===b.nodeType};a.elem=a.element;a.empty=function(b){var c;if(!a._obj(b))return!b;if(a.arr(b)||a.func(b))return!b.length;for(c in b)if(q(b,c))return!1;return!0};a.same=function(a,b){return a===b};a.similar=function(a,b){return a==b};a.sim=a.similar;a.frozen=function(b){if(a.nil(b))return!1;if(!a._obj(b))throw new TypeError(a.frozen.errorMsg.notObj);
return A(b)};a.frozen.errorMsg={notObj:"The val for is/are.frozen calls must be an object, function, or null."};var A=function(){var b;if(!Object.isFrozen)return function(a){return!1};b=Object.isFrozen;try{b(function(){})}catch(c){return function(c){return a.func(c)?!1:b(c)}}return b}();a.whole=function(b){if(!a.num(b))throw new TypeError(a.whole.errorMsg.notNum);return!(b%1)};a.whole.errorMsg={notNum:r("whole")};a._whole=function(a){return!(a%1)};a.odd=function(b){if(!a.num(b))throw new TypeError(a.odd.errorMsg.notNum);
if(!a._whole(b))throw new RangeError(a.odd.errorMsg.whole);return!!(b%2)};a.odd.errorMsg={notNum:r("odd"),whole:k("odd")};a._odd=function(a){return!!(a%2)};a.even=function(b){if(!a.num(b))throw new TypeError(a.even.errorMsg.notNum);if(!a._whole(b))throw new RangeError(a.even.errorMsg.whole);return!(b%2)};a.even.errorMsg={notNum:r("even"),whole:k("even")};a._even=function(a){return!(a%2)};b.nil=function(){return c("null",arguments)};try{b["null"]=b.nil}catch(F){m("are","null","nil")}b.undefined=function(){return c("undefined",
arguments)};b.bool=function(){return c("bool",arguments)};try{b["boolean"]=b.bool}catch(G){m("are","boolean","bool")}b.string=function(){return c("string",arguments)};b.str=b.string;b._string=function(){return c("_string",arguments)};b._str=b._string;b.number=function(){return c("number",arguments)};b.num=b.number;b._number=function(){return c("_number",arguments)};b._num=b._number;b.nan=function(){return c("nan",arguments)};b.object=function(){return c("object",arguments)};b.obj=b.object;b._object=
function(){return c("_object",arguments)};b._obj=b._object;b.func=function(){return c("func",arguments)};b.fn=b.func;try{b["function"]=b.func}catch(H){m("are","function","func")}b.array=function(){return c("array",arguments)};b.arr=b.array;b._array=function(){return c("_array",arguments)};b._arr=b._array;b.regexp=function(){return c("regexp",arguments)};b.regex=b.regexp;b.date=function(){return c("date",arguments)};b.error=function(){return c("error",arguments)};b.err=b.error;b.args=function(){return c("args",
arguments)};try{b.arguments=b.args}catch(I){m("are","arguments","args")}b.document=function(){return c("document",arguments)};b.doc=b.document;b.element=function(){return c("element",arguments)};b.elem=b.element;b.empty=function(){return c("empty",arguments)};b.frozen=function(){return c("frozen",arguments)};b.whole=function(){return c("whole",arguments)};b._whole=function(){return c("_whole",arguments)};b.odd=function(){return c("odd",arguments)};b._odd=function(){return c("_odd",arguments)};b.even=
function(){return c("even",arguments)};b._even=function(){return c("_even",arguments)};f.arrays=function(b){return function(c){var d;if(!a.arr(c))return!1;for(d=c.length;d--;)if(!b(c[d]))return!1;return!0}};f.maps=function(b){return function(c){var d;if(!a.obj(c))return!1;for(d in c)if(q(c,d)&&!b(c[d]))return!1;return!0}};var w={};g("primitives",{undefined:a.undefined,"boolean":a.bool,string:a.str,number:a.num,nan:a.nan},!1);f("primitives","null",a.nil);g("js_objects",{object:a.obj,regexp:a.regex,
array:a.arr,date:a.date,error:a.err});f("js_objects","arguments",a.args);f("js_objects","function",a.func,!1);g("dom_objects",{element:a.elem,document:a.doc});g("others",{empty:a.empty,whole:a.whole,odd:a.odd,even:a.even});g("arrays",{nulls:a.nil,booleans:a.bool,strings:a.str,numbers:a.num,nans:a.nan,objects:a.obj,functions:a.func,regexps:a.regex,arrays:a.arr,dates:a.date,errors:a.err,elements:a.elem,documents:a.doc});g("maps",{nullmap:a.nil,booleanmap:a.bool,stringmap:a.str,numbermap:a.num,nanmap:a.nan,
objectmap:a.obj,functionmap:a.func,regexpmap:a.regex,arraymap:a.arr,datemap:a.date,errormap:a.err,elementmap:a.elem,documentmap:a.doc});var y={_nil:"null",_bool:"boolean",_str:"string",_num:"number",_obj:"object",_func:"function",_fn:"function",_regex:"regexp",_arr:"array",_err:"error",_args:"arguments",_elem:"element",_doc:"document",_nils:"nulls",_strs:"strings",_nums:"numbers",_bools:"booleans",_objs:"objects",_funcs:"functions",_fns:"functions",_regexs:"regexps",_arrs:"arrays",_errs:"errors",
_elems:"elements",_docs:"documents",_nilmap:"nullmap",_strmap:"stringmap",_nummap:"numbermap",_boolmap:"booleanmap",_objmap:"objectmap",_funcmap:"functionmap",_fnmap:"functionmap",_regexmap:"regexpmap",_arrmap:"arraymap",_errmap:"errormap",_elemmap:"elementmap",_docmap:"documentmap"},l=function(a,b,c,f,g){return{"|":function(b){return a.test(b)},"!":function(a){return b.test(a)},"?":function(a){return c.test(a)},"=":function(a){return f.test(a)},"*":function(a){return g.test(a)},all:/[^a-z\|]/g}}(/\|/,
/\!/,/\?/,/\=/,/\*|any/);return{is:a,Is:a,are:b,Are:b}});
